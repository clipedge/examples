# example file to load lookup table from file

# load sample.config into hash for later lookups by hostame
sub loadConfigIntoHashTable() {
        my ( $self, $infile, $cfgdata ) = @_;
        print "inside loadConfigIntoHashTable <$infile>\n" if ($debug);

        open (CFGFILE, "< $infile") or cleanUpAndExit("this", "Cannot open file
: <" . $infile . ">" );
        while (<CFGFILE>) {
                next if ( m/^#/ );
                my $rec = $_;
                chomp $rec;
                $rec =~ tr/ //d;
                $rec =~ tr/A-Z/a-z/;

                #"sample.config" [Read only] 54 lines, 4100 characters
                # Hostname:Active:DayOfWeek:SystemName:HeaderName:ID:FEED:BILL
                #abc:Y:0:ABC:ALBUQRQE:000110:1:0
                #def:Y:0:DEF:DEF:000000:1:0
                if ( $rec =~ m/^(.*?):(.*?):(.*?):(.*?):(.*?):(.*?):(.*?):(.*?)$/ ) {

                       next if (!(exists($$cfgdata{$1})));

                        $$cfgdata{ $1 }{ 'hostname' }   = $1;
                        $$cfgdata{ $1 }{ 'active' }     = $2;
                        $$cfgdata{ $1 }{ 'dayofweek' }  = $3;
                        $$cfgdata{ $1 }{ 'sys' }        = $4;
                        $$cfgdata{ $1 }{ 'headername' } = $5;
                        $$cfgdata{ $1 }{ 'id' }         = $6;
                        $$cfgdata{ $1 }{ 'feed' }       = $7;
                        $$cfgdata{ $1 }{ 'bill' }       = $8;

                }
        }
        close(CFGFILE);

        return;
}

# on abend, before program exit, perform housekeeping tasks
sub cleanUpAndExit {
        my ( $self, $msg ) = @_;
        print "inside cleanUpAndExit\n" if ($debug);
        print $msg. "\n";
        exit -1;
}


# from main parser program...

# initialize hashes to store: configData
my %cfgdata     = ();

# how-to call subroutine
        $parser->loadConfigIntoHashTable($parser->getSwToBillConfig( option => $opt{s} ),\%cfgdata);

