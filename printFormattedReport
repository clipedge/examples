# example subroutine to print formatted report

sub printReport {
        my ( $self, $outfile, $percentage, $hash, $totrecs ) = @_;
        print "inside printReport <$outfile> <$percentage> <$$totrecs>\n" if ($debug);

        open(OUTFILE,">$outfile") || cleanUpAndExit("this", "Cannot open file : <" . $outfile . ">" );

        printf OUTFILE ("List based on <%d%%> threshold\n",$percentage);
        printf OUTFILE ("%3s%12s%12s%11s\n","FLD1","Count","TotRecs","Percentage");

        foreach (sort keys %$hash) {
                printf OUTFILE ("%3d%12d%12s%10.3f%%\n",$_,$$hash{$_},$$totrecs,($$hash{$_}/$$totrecs)*100);
        }

        close(OUTFILE);

        return 1;
}

# calling the subroutine from the main program

# initialize hashes to store: data
my %hash     = ();

# store the total valid records processed
my $totRecs;

$parser->printReport("$out/$outFile\.rpt",$parser->isValidPercent( option => $opt{i} ),\%hash,\$totRecs);

